{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sean Lin\\\\workspace\\\\Self Projects\\\\react\\\\coinapp\\\\src\\\\components\\\\home.js\";\nimport React, { useState } from \"react\";\nimport { Row, Col, Card } from 'react-bootstrap';\nimport GreeceSVG from '../greece';\nimport useCoin from './useCoin';\n\nfunction Home() {\n  let coin_display;\n  const [coin, getCoin] = useState({\n    city: null,\n    city_coin: null,\n    city_desc: null,\n    region: null,\n    pic: null,\n    trigger: false\n  });\n\n  const fetchAPI = async value => {\n    const {\n      test\n    } = useCoin(\"http://127.0.0.1:4000/find?region=\" + value);\n    const url = \"http://127.0.0.1:4000/find?region=\" + value;\n    fetch(url).then(res => {\n      if (res.ok) {\n        return res.json();\n      } else {\n        throw new Error(\"Something went wrong\");\n      }\n    }).then(data => {\n      getCoin({\n        city: data[0].city_name,\n        city_coin: data[0].city_coin,\n        city_desc: data[0].city_desc,\n        region: data[0].coin_region,\n        pic: \"http://127.0.0.1:4000/imgfeed/\" + data[0].coin_img\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n    console.log(test);\n  }; //unused function\n\n\n  const locMouseOver = input => {\n    const reg_name = input.target.attributes.name.value;\n    fetchAPI(reg_name);\n  };\n\n  const closePic = () => {\n    getCoin(prevState => ({ ...prevState,\n      pic: null\n    }));\n  };\n\n  if (coin.pic != null) {\n    coin_display = /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      id: \"b-right\",\n      onClick: closePic,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }, \"X\"), /*#__PURE__*/React.createElement(Card.Img, {\n      variant: \"top\",\n      src: coin.pic,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Card.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }\n    }, coin.city_coin), /*#__PURE__*/React.createElement(Card.Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }\n    }, \"City: \", coin.city), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }\n    }, \"Region: \", coin.region), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }\n    }, \"Description: \", coin.city_desc)));\n  } else {\n    coin_display = null;\n  }\n\n  return /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: 9,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(GreeceSVG, {\n    getData: fetchAPI,\n    trigger: coin.trigger,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    sm: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, coin_display));\n}\n\nexport default Home;","map":{"version":3,"sources":["C:/Users/Sean Lin/workspace/Self Projects/react/coinapp/src/components/home.js"],"names":["React","useState","Row","Col","Card","GreeceSVG","useCoin","Home","coin_display","coin","getCoin","city","city_coin","city_desc","region","pic","trigger","fetchAPI","value","test","url","fetch","then","res","ok","json","Error","data","city_name","coin_region","coin_img","catch","err","console","log","locMouseOver","input","reg_name","target","attributes","name","closePic","prevState"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\r\nimport { Row, Col, Card} from 'react-bootstrap';\r\nimport GreeceSVG from '../greece';\r\nimport useCoin from './useCoin';\r\nfunction Home(){\r\n    let coin_display;\r\n    \r\n    const [coin, getCoin] = useState({\r\n            city: null,\r\n            city_coin: null,\r\n            city_desc: null,\r\n            region: null,\r\n            pic: null,\r\n            trigger: false\r\n        })\r\n\r\n   \r\n    \r\n    const fetchAPI = async (value) =>{\r\n        const {test} = useCoin(\"http://127.0.0.1:4000/find?region=\" + value)\r\n        const url = \"http://127.0.0.1:4000/find?region=\" + value\r\n        fetch(url).then(res => {\r\n            if (res.ok) {\r\n                return res.json()\r\n            } else {\r\n                throw new Error(\"Something went wrong\")\r\n            }\r\n        }).then(data => {\r\n            getCoin({\r\n                city: data[0].city_name,\r\n                city_coin: data[0].city_coin,\r\n                city_desc: data[0].city_desc,\r\n                region: data[0].coin_region,\r\n                pic: \"http://127.0.0.1:4000/imgfeed/\" + data[0].coin_img\r\n            })\r\n        }).catch(err => {\r\n            console.log(err)\r\n        })\r\n\r\n        console.log(test)\r\n    }\r\n    \r\n\r\n\r\n    //unused function\r\n    const locMouseOver = (input) =>{\r\n        const reg_name = input.target.attributes.name.value\r\n        fetchAPI(reg_name)\r\n    }\r\n\r\n    const closePic = () => {\r\n        getCoin(prevState =>({\r\n            ...prevState,\r\n            pic: null\r\n        }))\r\n        \r\n    }\r\n\r\n    if(coin.pic!= null) {\r\n        coin_display = (\r\n            <Card >\r\n                <button id=\"b-right\" onClick={closePic}>X</button>\r\n                <Card.Img variant=\"top\" src={coin.pic}></Card.Img>\r\n                <Card.Title>{coin.city_coin}</Card.Title>\r\n                <Card.Text>\r\n                    <p>City: {coin.city}</p>\r\n                    <p>Region: {coin.region}</p>\r\n                    <p>Description: {coin.city_desc}</p>\r\n                </Card.Text>\r\n            </Card>\r\n        )\r\n    } else {\r\n        coin_display = null\r\n    }\r\n\r\n    return(\r\n        <Row>\r\n            <Col sm={9}>\r\n                <GreeceSVG getData = {fetchAPI} trigger = {coin.trigger} />\r\n            </Col>\r\n\r\n            <Col sm={3}>\r\n                {coin_display}\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default Home;"]},"metadata":{},"sourceType":"module"}